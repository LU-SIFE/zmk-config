/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <14 15>;
            layers = <0 1 2 3>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 1 2 3>;
        };

        Hyphen {
            bindings = <&kp MINUS>;
            key-positions = <4 5>;
            layers = <0 1 2 3>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <4 3>;
            layers = <0 1 2>;
        };

        toggle {
            bindings = <&tog 3>;
            key-positions = <30 35>;
            layers = <0 1 2 3>;
        };

        one_hand {
            bindings = <&mo 2>;
            key-positions = <30 31>;
            layers = <0 1 2 3>;
        };

        Face {
            bindings = <&kp COLON>;
            key-positions = <24 14>;
            layers = <0 1 2 3>;
        };

        one-hand-toggle {
            bindings = <&tog 3>;
            key-positions = <30 32>;
            layers = <3 0 1 2>;
        };
    };

    chosen { zmk,matrix_transform = &five_column_transform; };

    keymap {
        compatible = "zmk,keymap";

        default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q        &kp W           &kp E             &kp R         &kp T        &kp Y      &kp U          &kp I                  &kp O              &kp P
&kp A        &kp S           &kp D             &kp F         &kp G        &kp H      &kp J          &kp K                  &kp L              &mt SEMICOLON SINGLE_QUOTE
&mt LCTRL Z  &mt LEFT_ALT X  &mt LEFT_SHIFT C  &kp V         &kp B        &kp N      &kp M          &mt RIGHT_SHIFT COMMA  &mt RIGHT_ALT DOT  &mt RCTRL FSLH
                             &mo 1             &kp LEFT_GUI  &kp SPACE    &kp ENTER  &kp BACKSPACE  &mo 2
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTERISK    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCLAMATION  &kp AT_SIGN  &kp PIPE
&kp MINUS  &kp N4  &kp N5  &kp N6  &kp FSLH        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH         &kp DOLLAR   &kp GRAVE
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N0          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT      &kp CARET    &kp TILDE
                   &trans  &none   &none           &kp ENTER             &kp BACKSPACE          &trans
            >;
        };

        func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1   &kp F2   &kp F3     &kp F4                &kp F5                  &kp DELETE      &kp UP_ARROW    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_PLAY_PAUSE
&kp F6   &kp F7   &kp F8     &kp F9                &kp F10                 &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp K_PREVIOUS   &kp K_NEXT
&kp F11  &kp F12  &kp LCTRL  &kp LEFT_ALT          &kp LSHFT               &kp CAPSLOCK    &kp K_MUTE      &kp K_BACK         &kp K_FORWARD    &kp K_POWER
                  &trans     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp ENTER       &kp BACKSPACE   &trans
            >;
        };

        gaming {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R        &kp T      &kp Y          &kp U  &kp I  &kp O
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F        &kp G      &kp H          &kp J  &kp K  &kp L
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V        &kp B      &kp N          &kp M  &kp P  &out OUT_TOG
                         &mo 1  &kp LEFT_ALT  &kp SPACE    &kp ENTER  &kp RIGHT_GUI  &mo 2
            >;
        };
    };
};
